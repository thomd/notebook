services:
  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REMOTE_PAGES_REPO_URL=${REMOTE_PAGES_REPO_URL}
        - NOTEBOOK_MODE=${NOTEBOOK_MODE}
    container_name: notebook-frontend
    ports:
      - "80:80"
      - "443:443"
    env_file: .env
    depends_on:
      - backend
  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notebook-backend
    ports:
      - "8000:8000"
    volumes:
      - "${LOCAL_PAGES_REPO}:${LOCAL_PAGES_REPO}"
    env_file: .env
    command: bash -c "python -m init.clone_git && python -m init.index_elasticsearch && exec uvicorn notebook.main:app --host 0.0.0.0 --port 8000"
    secrets:
      - notebook_ssh_key
    depends_on:
      elasticsearch:
        condition: service_healthy
  elasticsearch:
    restart: always
    image: elasticsearch:8.9.0
    ports:
     - "9200:9200"
    container_name: notebook-elasticsearch
    environment:
      SERVER_NAME: "elasticsearch"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      network.bind_host: 0.0.0.0
      network.host: 0.0.0.0
      discovery.type: single-node
      xpack.security.enabled: false
      http.cors.enabled: true
      http.cors.allow-origin: "https://notebook"
      http.cors.allow-headers: "X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,x-elastic-client-meta"
      http.cors.allow-credentials: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 1s
      timeout: 3s
      retries: 30
secrets:
  notebook_ssh_key:
    file: ~/.ssh/notebook
